" Use Vim settings, rather than Vi settings
" This must be first, because it changes other options as a side effect.
set nocompatible

syntax on
filetype plugin indent on

set packpath+=~/.vim/pack
" using // so we can modify two files with the same name at the same time
" see https://vi.stackexchange.com/questions/16037/vim-swap-file-best-practices
set backupdir=$HOME/.vim//backup//
set directory^=$HOME/.vim//backup//
let mapleader = ","

" Allow project-specific .vimrc files
" Only works if you start vim from the project root directory
set exrc

set background=dark
set completeopt=longest,menuone
set number

set foldenable        " enable folding
set foldlevelstart=10 " open folds by default
set foldmethod=indent " fold based on indent level
set history=1024
set antialias
set clipboard=unnamed
set cm=blowfish2      " encryption
set hidden

set showmatch         " highlight matching lines
set matchtime=2
set incsearch         " search as new characters entered
set hlsearch          " highlight searches

set foldcolumn=0
set ff=unix
set enc=utf8
set tabpagemax=10
set cursorline
set cursorcolumn
" useful to set autoindent and smartindent for file types that Vim doesn't know about
set autoindent
set smartindent

set nowrap
set cindent
set smartindent
set expandtab
set backspace=2
set tabstop=4       " show existing tab with 4 spaces width
set softtabstop=4
set shiftwidth=4    " when indenting with '>', use 4 spaces width
set showtabline=0

set cpoptions-=C
set shortmess+=I
set noequalalways
set nocp incsearch
set nocp hlsearch
set ignorecase
set smartcase
set autowrite
set autoread
set modeline
set wildmenu
set wildmode=longest,list
set viminfo=""
set highlight=sb
set titlestring="Vim: %f%m"
set title
set cf
set ruler
set noerrorbells
set visualbell
set nocp
set completeopt=longest,menuone
set include="#include \\(<boost\\)\\@!"
set undofile
set undodir=~/.vim/.undo
" Redraw only when we need to
set lazyredraw

" Strip trailing whitespace on save
autocmd BufWritePre * :%s/\s\+$//e

"commands
command! W  :w
command! Q  :q
command! WQ :wq
command! Wq :wq
command! Wa :wa
command! WA :wa
command! QW :qw
command! Qa :qa
command! AW :aw

let g:lines=70
let g:columns=240
let g:LargeFile=2
let g:includes=''
let g:load_doxygen_syntax = 1
let g:refreshTime=1000
let g:compilation=0
let g:csWorking=999
let g:csInterrupted=998
let g:cs=g:csWorking
let g:quickFixHigh=9
let g:tlWindowPosition=1
let g:whoami=system("whoami | xargs echo -n")
let g:pwd=system("pwd | xargs echo -n")
let g:vimHome='/home/'.g:whoami.'/.vim'
let g:selectedMode='none'

"alternative
let g:alternateSearchPath = 'sfr:../Include:..:../Includes:../Source:../source,sfr:../src,sfr:../include,sfr:../inc,sfr:../../include:../../source,sfr:../../../include:../../../source'

" See https://vi.stackexchange.com/questions/1983/how-can-i-get-vim-to-stop-putting-comments-in-front-of-new-lines
au FileType c,cpp setlocal comments-=:// comments+=f://
au FileType c,cpp set mps+==:;

au BufEnter *.h,*.hpp,*.hh,*.hxx let b:fswitchdst='cpp,cc,C,cxx,c'
au BufEnter *.h,*.hpp,*.hh,*.hxx let b:fswitchlocs='.,../Source,../src,source,src,../source'
au BufEnter *.c,*.cpp,*.cc,*.cxx let b:fswitchdst='h,hpp,hxx,hh'
au BufEnter *.c,*.cpp,*.cc,*.cxx let b:fswitchlocs='.,../Include,../inc,include,inc,../include'
au BufEnter *.c,*.cpp,*.cc,*.cxx,*.h,*.hpp,*.hh,*.hxx set colorcolumn=80 | set expandtab | set cindent | setlocal spell spelllang=en_us

" run clang-format over a visual block of C++ code using <Leader>cf
autocmd FileType c,cpp nnoremap <buffer><Leader>cf :<C-u>ClangFormat<CR>
autocmd FileType c,cpp vnoremap <buffer><Leader>cf :ClangFormat<CR>
" This relies on using vim-operator-user
autocmd FileType c,cpp map <buffer><Leader>x <Plug>(operator-clang-format)
" Run clang-format on write to buffer (by default using .clang-format file since no options
" specified here)
" autocmd FileType c,cpp ClangFormatAutoEnable

function! ToggleCalendar()
  execute ":Calendar"
  if exists("g:calendar_open")
    if g:calendar_open == 1
      execute "q"
      unlet g:calendar_open
    else
      g:calendar_open = 1
    end
  else
    let g:calendar_open = 1
  end
endfunction

au Bufread *.uml set ft=plantuml
au Bufread *.plantuml set ft=plantuml

" Auto format cucumber tables
autocmd BufWritePost *.feature set ft=cucumber

inoremap <silent> <Bar>   <Bar><Esc>:call <SID>align()<CR>a

function! s:align()
  let p = '^\s*|\s.*\s|\s*$'
  if exists(':Tabularize') && getline('.') =~# '^\s*|' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
    let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))
    let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\s*\zs.*'))
    Tabularize/|/l1
    normal! 0
    call search(repeat('[^|]*|',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
  endif
endfunction

